{"version":3,"sources":["serviceWorker.js","components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","containers/App.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","_ref","name","loves","id","react_default","a","createElement","className","alt","src","concat","CardList","cats","map","cat","i","components_Card","key","Scroll","props","style","overflowY","border","height","children","SearchBox","searchfield","searchChange","type","placeholder","onChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChanges","event","setState","target","value","state","_this2","fetch","then","response","json","users","_this$state","filtercats","filter","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_CardList","Component","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oLAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,wGCHSC,EAbF,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,MAAOC,EAAQH,EAARG,GAE3B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,MAAMC,IAAG,wBAAAC,OAA0BP,EAA1B,eAClBC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKL,GACLG,EAAAC,EAAAC,cAAA,SAAIJ,MCaGS,EAnBE,SAAAX,GAAY,IAAVY,EAAUZ,EAAVY,KAEjB,OACER,EAAAC,EAAAC,cAAA,WAEKM,EAAKC,IAAI,SAACC,EAAKC,GACd,OACEX,EAAAC,EAAAC,cAACU,EAAD,CACEC,IAAKL,EAAKG,GAAGZ,GACbA,GAAIS,EAAKG,GAAGZ,GACZF,KAAMW,EAAKG,GAAGd,KACdC,MAAOU,EAAKG,GAAGb,YCJdgB,EARA,SAACC,GACf,OACCf,EAAAC,EAAAC,cAAA,OAAKc,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UACnEJ,EAAMK,WCUKC,EAbG,SAAAzB,GAAmCA,EAAhC0B,YAAgC,IAAnBC,EAAmB3B,EAAnB2B,aACjC,OACCvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,SACCC,UAAU,mCACVqB,KAAK,SACLC,YAAY,qBACZC,SAAUH,MCqCCI,qBAtCd,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACbC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAaDI,gBAAkB,SAACC,GAClBR,EAAKS,SAAS,CAACf,YAAac,EAAME,OAAOC,SAbzCX,EAAKY,MAAQ,CACZhC,KAAM,GACNc,YAAa,IAJDM,mFAQK,IAAAa,EAAAV,KAClBW,MAAM,6CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKJ,SAAS,CAAC7B,KAAOsC,uCAO9B,IAAAC,EACuBhB,KAAKS,MAA3BhC,EADDuC,EACCvC,KAAMc,EADPyB,EACOzB,YACR0B,EAAaxC,EAAKyC,OAAO,SAAAvC,GAC9B,OAAOA,EAAIb,KAAKqD,cAAcC,SAAS7B,EAAY4B,iBAGnD,OAAQ1C,EAAK4C,OAGZpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,WACAH,EAAAC,EAAAC,cAACmD,EAAD,CAAW9B,aAAcQ,KAAKI,kBAC9BnC,EAAAC,EAAAC,cAACoD,EAAD,KACCtD,EAAAC,EAAAC,cAACqD,EAAD,CAAU/C,KAAMwC,IADjB,MALAhD,EAAAC,EAAAC,cAAA,4BA1BasD,cCClBC,IAASC,OAAO1D,EAAAC,EAAAC,cAACyD,EAAD,MAAQC,SAASC,eAAe,SNqH1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrB,KAAK,SAAAsB,GACjCA,EAAaC","file":"static/js/main.67623a1d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst Card = ({ name, loves, id}) => {\n  // const { name, loves, id} = props; //destructure\n  return (\n    <div className='tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\n      <img alt='cat' src={`https://robohash.org/${id}?set=set4`}/>\n      <div>\n        <h2>{name}</h2>\n        <p>{loves}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({cats}) => {\n\n  return (\n    <div>\n      {\n         cats.map((cat, i) => {\n          return (\n            <Card\n              key={cats[i].id}\n              id={cats[i].id}\n              name={cats[i].name}\n              loves={cats[i].loves}/>\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;\n","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n};\n\nexport default Scroll;","import React from 'react';\n\nconst SearchBox = ( {searchfield, searchChange} ) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue' \n\t\t\t\ttype='search' \n\t\t\t\tplaceholder='search for kitties' \n\t\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport Scroll from '../components/Scroll';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\n\n\nclass App extends Component { //smart component\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcats: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('http://jsonplaceholder.typicode.com/users')\n\t\t.then(response => response.json())\n\t\t.then(users => this.setState({cats : users}));\n\t}\n\n\tonSearchChanges = (event) =>{\n\t\tthis.setState({searchfield: event.target.value})\n\t}\n\n\trender(){\n\t\tconst { cats, searchfield } = this.state;\n\t\tconst filtercats = cats.filter(cat => {\n\t\t\treturn cat.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t});\t\n\n \t\treturn !cats.length ?\n \t\t\t <h1>Loading</h1> :\n \t\t\t(\n\t\t\t\t<div className='tc'>\n\t\t\t\t\t<h1 className='f1'>Kitties</h1>\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChanges} />\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<CardList cats={filtercats}/>;\n\t\t\t\t\t</Scroll>\t\n\t\t\t\t</div>\n\t\t\t);\t\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}